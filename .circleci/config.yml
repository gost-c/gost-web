default: &default
  workdir_root: &workdir_root
    /root/gost-web

  docker:
    - image: node:8.10.0
  working_directory: *workdir_root

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workdir_root

  restore_cache: &restore_cache
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

  save_cache: &save_cache
    save_cache:
      paths:
        - node_modules
      key: v1-dependencies-{{ checksum "package.json" }}

version: 2
jobs:
  test:
    <<: *default
    steps:
      - checkout
      # Download and cache dependencies
      - *restore_cache
      - run: yarn
      - *save_cache
      - run:
          name: test
          command: yarn test

  build:
    <<: *default
    steps:
      - checkout
      # Download and cache dependencies
      - *restore_cache
      - run: yarn
      - *save_cache
      - run:
          name: build
          command: yarn build
      - store_artifacts:
          path: /root/gost-web/dist
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: *workdir_root
          # Must be relative path from root
          paths:
            - dist

  deploy:
    <<: *default
    steps:
      - checkout
      - *attach_workspace
      - run:
          name: push to production
          command: |
            yarn global add surge
            surge -p dist --token $SURGE_TOKEN
  staging:
    <<: *default
    steps:
      - checkout
      - *attach_workspace
      - run:
          name: push to staging
          command: |
            yarn global add netlify-cli
            NETLIFY_AUTH_TOKEN=$NETLIFY_TOKEN NETLIFY_SITE_ID=44019934-f939-426c-983b-0efaf593ef0d netlify deploy --dir dist
workflows:
  version: 2
  build-n-deploy:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - test
          filters:
            tags:
              only: /.*/
      # - staging:
      #     context: org-global
      #     requires:
      #       - build
      #     filters:
      #       tags:
      #         ignore: /^v.*/
      # - deploy:
      #     context: org-global
      #     requires:
      #       - build
      #     filters:
      #       tags:
      #         only: /^v.*/
      #       branches:
      #         ignore: /.*/
